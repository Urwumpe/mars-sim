name: Docker

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
  label:
    types: [created]

env:
  IMAGE_NAME: mars-sim

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
          
      - name: Build with Maven
        run: mvn -B package -DskipTests=true --file pom.xml 

      - name: Copy Jar file
        run: |
          # Find the project version off the MVN pom
          MARS_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)
          mv mars-sim-headless/target/mars-sim_console_$MARS_VERSION.jar mars-sim-console.jar

      - uses: actions/upload-artifact@master
        with:
          name: jar-file
          path: mars-sim-console.jar
    
  build-image:
    runs-on: ubuntu-latest
    needs: build
        
    steps:          
    - uses: actions/checkout@v3

    - uses: actions/download-artifact@master
      with:
        name: jar-file
        path: mars-sim-console.jar

    - name: Build image with Package Docker
      run: |
        # Build the image
        docker build . --file Dockerfile --tag $IMAGE_NAME
          
    - name: Log into registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

    - name: Push image
      run: |
        IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          
        # Find the project version off the MVN pom
        MARS_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)
          
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$MARS_VERSION

        docker tag $IMAGE_NAME $IMAGE_ID:$MARS_VERSION
        docker push $IMAGE_ID:$MARS_VERSION
