<?xml version = "1.0" encoding = "UTF-8" standalone = "yes" ?>
<!DOCTYPE simulation-configuration [
	<!ELEMENT simulation-configuration (time-configuration)>
	<!ELEMENT time-configuration (base-time-ratio, base-time-between-updates, no-delays-per-yield, max-frame-skips, 
	earth-start-date-time, mars-start-date-time, autosave-interval, average-transit-time)>
	<!ELEMENT base-time-ratio EMPTY>
	<!ATTLIST base-time-ratio value CDATA #REQUIRED>
	<!ELEMENT base-time-between-updates EMPTY>
	<!ATTLIST base-time-between-updates value CDATA #REQUIRED>
	<!ELEMENT no-delays-per-yield EMPTY>
	<!ATTLIST no-delays-per-yield value CDATA #REQUIRED>
	<!ELEMENT max-frame-skips EMPTY>
	<!ATTLIST max-frame-skips value CDATA #REQUIRED>
	<!ELEMENT earth-start-date-time EMPTY>
	<!ATTLIST earth-start-date-time value CDATA #REQUIRED>
	<!ELEMENT mars-start-date-time EMPTY>
	<!ATTLIST mars-start-date-time value CDATA #REQUIRED>
	<!ELEMENT autosave-interval EMPTY>
	<!ATTLIST autosave-interval value CDATA #REQUIRED>
	<!ELEMENT average-transit-time EMPTY>
	<!ATTLIST average-transit-time value CDATA #REQUIRED>
]>

<simulation-configuration>

	<!-- Time related configuration -->
	<time-configuration>

		<!-- The base time ratio (TR) is the default simulation time ratio : the ratio of real time to sim time prior to modification
			Note 1 : It denotes the speed of the simulation
			     2 : Value must be positive number between 16 and 2048 and cannot be zero
			     3 : the calculated TR is dependent upon the # of cpu threads available on user's machine. 
			         The base TR value below will be overridden by the calculated TR at the start of the sim..
		-->
		<!-- Default: 256.0 -->
		<base-time-ratio value="256" />
		<!-- 1. time ratio will be re-scaled according to available # of threads (not # of cpu cores).
			 2. time ratio must be a multiple of 2.
			 3. if time ratio is 512, then 1 real second equals 512 simulation seconds in mars-sim
			 4. Minimum is 64, maximum is 4096
		-->

		<!-- The base time between updates (TBU) is the ideal time interval between two successive updates [in milliseconds] 
		     prior to modification. It is essentially the maximum sleep time between two game iterations or updates.
			 Note 1 : The smaller the TBU, the better the "resolution" of the simulation
		          2 : Frames Per Second (FPS) or Ticks Per Seconds (TPS) [in hertz] is just the reciprocal of TBU
		          3 : Value must be positive number between 40.0 and 250.0 and preferably be a multiple of 2 and cannot be zero 
		          4 : the product of time-ratio and time-between-updates is the default time elapsed
			      5 : the calculated TBU is dependent upon the number of cpu threads available in user's machine.
			           The base TBU value below will be overridden by the calculated TBU at the start of the sim. 
		-->
		<!-- Default: 50.0 -->
		<base-time-between-updates value="50.0" />
		<!-- e.g. 50 ms is equal to 20 Hz (1/50ms = 20 Hz)
			       c. 1 real sec = 50 ms * 20 Hz ; 1 sim sec = base-time-ratio * 1 real sec = 256 secs
			 	   d. since 1 millisols = 88.775244 secs, 1 real sec = 0.0113 millisols 
			       e. 1 sim sec = 0.0113 millisols 256 secs = 2.8837 millisols 
		-->


		<!-- no-delays-per-yield is the maximum number of counts allowed in waiting for other threads to execute -->
		<!-- It avoids the use of an arbitrary sleep period in the MasterClock game loop -->
		<!-- Value must be positive integer between 1 and 100 -->
		<!-- Default: 16 -->
		<no-delays-per-yield value="16" />
		<!-- e.g. If the game update and rendering steps take longer than the iteration period, say, 42 ms,
			 then at the next iteration, it will not resort to sleep for 40 ms as usual. This cause a counter
			 to increment. If the counter exceeds the default value of 16, the game loop will be told to
			 wait and yield for other threads to finish execution before it resumes -->


		<!-- max-frame-skips is the number of skipped frames allowed -->
		<!-- It is a measure of tolerance of the maximum number of lost frames. Sometimes, the simulation take
			too long (say, more than the default 40 ms) to finish its execution in a frame.
			Then by the time the next update is due, the simulation has yet finished the previous frame.
			max_frame-skips should be fine-tuned with the TBU together -->
		<!-- The large the max-frame-skips, the more sudden the game jump forward -->
		<!-- Value must be positive integer between 1 and 50 -->
		<!-- Default: 20 -->
		<max-frame-skips value="20" />
		<!-- e.g. Suppose a simulation takes a prolonged period of 400 ms to complete the execution. In 400 ms, it should
			have call the MasterClock to update the game loop 10 times (if the default TBU is 40 ms).
			If max-frame-skips is set to 10, then it would NOT try to immediately run 10 updates back-to-back
			just to catch up with the lost frames. The normal behavior of the MasterClock is that it will dynamically
			adjust the value of TBU in order to recover as many lost frames as possible by running a update as soon as
			it is due -->


		<!-- Earth start date/time -->
		<!-- "yyyy-MM-dd hh:mm:ss" format -->
		<!-- Default: 2028-08-17 15:23:13.740 -->
		<!-- Note that iso8601 String is "2043-09-30T00:0:00.000Z". 
		     see https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html#ISO_ZONED_DATE_TIME --> 
		<!-- It was previously designated as "2043-09-30 00:00:00.000" -->
		<earth-start-date-time value="2028-08-17 15:23:13.740"/> 

		<!-- Mars start date/time -->
		<!-- "orbit-month-sol:millisol" format -->
		<!-- Default: 0015-Adir-01:000.000 -->
		<!-- It was previously designated as "0015-Adir-01:000.000" -->
		<mars-start-date-time value="00-Adir-01:000.000" />

		<!-- autosave-interval is the number of minutes the simulation will wait between two successive autosave events -->
		<!-- Value must be a positive number between 1 and 1440 and cannot be zero -->
		<!-- Min : 1 ; Max : 360 -->
		<!-- Default: 15 -->
		<autosave-interval value="15" />

		<!-- average transit-time is the number of sols to send payload/cargo from Earth to Mars -->
		<!-- Min : 1 ; Max : 430 -->
		<!-- Default: 60 -->
		<average-transit-time value="60" />

	</time-configuration>

</simulation-configuration>